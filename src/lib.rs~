extern crate future;

use future::Future;

pub type TestFuture<E> = Box<Future<Item = (), Error = E> + Send + Sync + 'static>;

pub trait Testable {
    type Error;
    fn test(self) -> TestFuture<Self::Error>;
}

pub enum Test<Error> {
    Test {
        name: String,
        test: Box<Testable<Error = Error>>,
    },
    Group {
        name: String,
        test: Vec<Test<Error>>,
    },
}

impl<E> Testable for fn() -> E {
    type Error = E;
}


#[cfg(test)]
mod tests {
    #[test]
    fn it_works() {
        assert_eq!(2 + 2, 4);
    }
}
